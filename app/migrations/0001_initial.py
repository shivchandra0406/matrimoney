# Generated by Django 3.2.4 on 2021-10-17 13:31

import app.manager
from django.db import migrations, models
import django.utils.timezone
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Registration',
            fields=[
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('uid', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('mobilenumber', models.CharField(max_length=12, unique=True)),
                ('gender', models.CharField(choices=[('male', 'male'), ('female', 'female')], max_length=10)),
                ('pic', models.ImageField(upload_to='image')),
                ('dob', models.DateField(blank=True, null=True)),
                ('religion', models.CharField(choices=[('Select Options', 'Select Options'), ('Hindu', 'Hindu'), ('Muslim-All', 'Muslim-All'), ('Muslim-Shia', 'Muslim-Shia'), ('Muslim-Sunni', 'Muslim-Sunni'), ('Muslim-Others', 'Muslim-Others'), ('Christian', 'Christian'), ('Sikh', 'Sikh'), ('Jain-All', 'Jain-All'), ('Jain-Digambar', 'Jain-Digambar'), ('Jain-Shwetambar', 'Jain-Shwetambar'), ('Jain-Others', 'Jain-Others'), ('Parsi', 'Parsi'), ('Buddhist', 'Buddhist'), ('Jewish', 'Jewish'), ('Inter-Religion', 'Inter-Religion')], max_length=200)),
                ('mother_tongue', models.CharField(choices=[('Select Options', 'Select Options'), ('Bengali', 'Bengali'), ('Gujarati', 'Gujarati'), ('Hindi', 'Hindi'), ('Kannada', 'Kannada'), ('Malayalam', 'Malayalam'), ('Marathi', 'Marathi'), ('Marwari', 'Marwari'), ('Oriya', 'Oriya'), ('Punjabi', 'Punjabi'), ('Sindhi', 'Sindhi'), ('Tamil', 'Tamil'), ('Telugu', 'Telugu'), ('Urdu', 'Urdu'), ('Angika', 'Angika'), ('Arunachali', 'Arunachali'), ('Assamese', 'Assamese'), ('Awadhi', 'Awadhi'), ('Bhojpuri', 'Bhojpuri'), ('Brij', 'Brij'), ('Bihari', 'Bihari'), ('Badaga', 'Badaga'), ('Chatisgarhi', 'Chatisgarhi'), ('Dogri', 'Dogri'), ('English', 'English'), ('French', 'French'), ('Garhwali', 'Garhwali'), ('Garo', 'Garo'), ('Haryanvi', 'Haryanvi'), ('Himachali/Pahari', 'Himachali/Pahari'), ('Kanauji', 'Kanauji'), ('Kashmiri', 'Kashmiri'), ('Khandesi', 'Khandesi'), ('Khasi', 'Khasi'), ('Konkani', 'Konkani'), ('Koshali', 'Koshali'), ('Kumaoni', 'Kumaoni'), ('Kutchi', 'Kutchi'), ('Lepcha', 'Lepcha'), ('Ladacki', 'Ladacki'), ('Magahi', 'Magahi'), ('Maithili', 'Maithili'), ('Manipuri', 'Manipuri'), ('Miji', 'Miji'), ('Mizo', 'Mizo'), ('Monpa', 'Monpa'), ('Nicobarese', 'Nicobarese'), ('Nepali', 'Nepali'), ('Rajasthani', 'Rajasthani'), ('Sanskrit', 'Sanskrit'), ('Santhali', 'Santhali'), ('Sourashtra', 'Sourashtra'), ('Tripuri', 'Tripuri'), ('Tulu', 'Tulu'), ('Bagri Rajasthani', 'Bagri Rajasthani'), ('Dhundhari/Jaipuri', 'Dhundhari/Jaipuri'), ('Gujari/Gojari', 'Gujari/Gojari'), ('Harauti', 'Harauti'), ('Lambadi', 'Lambadi'), ('Malvi', 'Malvi'), ('Mewari', 'Mewari'), ('Mewati/Ahirwati', 'Mewati/Ahirwati'), ('Nimadi', 'Nimadi'), ('Shekhawati', 'Shekhawati'), ('Wagdi', 'Wagdi')], max_length=100)),
                ('caste', models.CharField(choices=[('Options Select', 'Options Select'), ('96 Kuli Maratha', '96 Kuli Maratha'), ('Agarwal', 'Agarwal'), ('Aheriya', 'Aheriya'), ('Agrahari', 'Agrahari'), ('Ahirwar', 'Ahirwar'), ('Anjana(Chowdary) Patel', 'Anjana(Chowdary) Patel'), ('Arakh/Arakvanshiya', 'Arakh/Arakvanshiya'), ('Aramari/Gabit', 'Aramari/Gabit'), ('Arora', 'Arora'), ('Asathi', 'Asathi'), ('Ayodhyavasi', 'Ayodhyavasi'), ('Bairwa', 'Bairwa'), ('Balai', 'Balai'), ('Baniya', 'Baniya'), ('Bari', 'Bari'), ('Barnwal', 'Barnwal'), ('Bhil', 'Bhil'), ('Bishnoi/Vishnoi', 'Bishnoi/Vishnoi'), ('Bondili', 'Bondili'), ('Brahmin-Anaviln Desai', 'Brahmin-Anaviln Desai'), ('Brahmin-Baidhiki/Vaidhiki', 'Brahmin-Baidhiki/Vaidhiki'), ('Brahmin-Bardai', 'Brahmin-Bardai'), ('Brahmin-Bhargav', 'Brahmin-Bhargav'), ('Brahmin-Bhatt', 'Brahmin-Bhatt'), ('Brahmin-Bhumihar', 'Brahmin-Bhumihar'), ('Brahmin-Dhiman', 'Brahmin-Dhiman'), ('Brahmin-Garhwali', 'Brahmin-Garhwali'), ('Brahmin-Gaur', 'Brahmin-Gaur'), ('Brahmin-Goswami/Gosavi', 'Brahmin-Goswami/Gosavi'), ('Brahmin-Kanyakubj', 'Brahmin-Kanyakubj'), ('Brahmin-Khadayata', 'Brahmin-Khadayata'), ('Brahmin-khandelwal', 'Brahmin-khandelwal'), ('Bramin-khedaval', 'Bramin-khedaval'), ('Brahmin-kumoani', 'Brahmin-kumoani'), ('Brahmin-Maithil', 'Brahmin-Maithil'), ('Brahmin-Mevada', 'Brahmin-Mevada'), ('Brahmin-Narmadiya', 'Brahmin-Narmadiya'), ('Brahmin-others', 'Brahmin-others'), ('Brahmin-Pandit', 'Brahmin-Pandit'), ('Brahmin-Pareek', 'Brahmin-Pareek'), ('Brahmin-Pushkarna', 'Brahmin-Pushkarna'), ('Bramin-Rajgor', 'Bramin-Rajgor'), ('Brahmin-Rarhi/Radhi', 'Brahmin-Rarhi/Radhi'), ('Brahmin-Sakaldwipi', 'Brahmin-Sakaldwipi'), ('Brahmin-Sandya', 'Brahmin-Sandya'), ('Brahmin-Sarua', 'Brahmin-Sarua'), ('Brahmin-Saryuparin', 'Brahmin-Saryuparin'), ('Brahmin-Shri Gaud', 'Brahmin-Shri Gaud'), ('Brahmin-Tapodhan', 'Brahmin-Tapodhan'), ('Brahmin-Tyagi', 'Brahmin-Tyagi'), ('Brahmin-Vlam', 'Brahmin-Vlam'), ('Brahmin-Zalora', 'Brahmin-Zalora'), ('Brajastha Maithil', 'Brajastha Maithil'), ('Chandravanshi Kahar', 'Chandravanshi Kahar'), ('Charan', 'Charan'), ('Chaturth', 'Chaturth'), ('Chaudary', 'Chaudary'), ('Chaurasia', 'Chaurasia'), ('Chhetri', 'Chhetri'), ('Choudhary', 'Choudhary'), ('Deshmukh', 'Deshmukh'), ('Devang Koshthi', 'Devang Koshthi'), ('Dhanak', 'Dhanak'), ('Dhobi', 'Dhobi'), ('Dosar/Dusra', 'Dosar/Dusra'), ('Dusadh(Paswan)', 'Dusadh(Paswan)'), ('Gahoi', 'Gahoi'), ('Ganda', 'Ganda'), ('Gandha Vanika', 'Gandha Vanika'), ('Garhwali', 'Garhwali'), ('Goan', 'Goan'), ('Gond', 'Gond'), ('Gujjar', 'Gujjar'), ('Gulahre', 'Gulahre'), ('Gupta', 'Gupta'), ('Gurav', 'Gurav'), ('Gurjar', 'Gurjar'), ('Intercaste', 'Intercaste'), ('Jaiswal', 'Jaiswal'), ('Jangra-Brahmin', 'Jangra-Brahmin'), ('Jat', 'Jat'), ('Jatav', 'Jatav'), ('Jhadav', 'Jhadav'), ('Jijhotia Brahmin', 'Jijhotia Brahmin'), ('Jogi(Nath)', 'Jogi(Nath)'), ('Julaha', 'Julaha'), ('Kadava Patel', 'Kadava Patel'), ('Kahar', 'Kahar'), ('Kala', 'Kala'), ('Kalar', 'Kalar'), ('Kalwar', 'Kalwar'), ('Kamboj', 'Kamboj'), ('Kanakkan Padanna', 'Kanakkan Padanna'), ('Kandara', 'Kandara'), ('Kansyakaar', 'Kansyakaar'), ('Kanykubj Bania', 'Kanykubj Bania'), ('Kasaundhan', 'Kasaundhan'), ('Kashyap', 'Kashyap'), ('Kayastha', 'Kayastha'), ('Keshri(Kesarwani)', 'Keshri(Kesarwani)'), ('Khandelwal', 'Khandelwal'), ('Kharwar', 'Kharwar'), ('Khatik', 'Khatik'), ('Kirar', 'Kirar'), ('Komti/Arya Vaishya', 'Komti/Arya Vaishya'), ('Kori', 'Kori'), ('Kori/koli', 'Kori/koli'), ('Kshatriya', 'Kshatriya'), ('Kshatriya Raju', 'Kshatriya Raju'), ('Kumaoni Rajput', 'Kumaoni Rajput'), ('Kumhar', 'Kumhar'), ('Kunbi Lonari', 'Kunbi Lonari'), ('Kunbi Maratha', 'Kunbi Maratha'), ('Kunbi Tirale', 'Kunbi Tirale'), ('Kurmi Kshatriya', 'Kurmi Kshatriya'), ('Kuruva', 'Kuruva'), ('Kushwaha(Koiri)', 'Kushwaha(Koiri)'), ('Lad', 'Lad'), ('Leva patel', 'Leva patel'), ('Lingayath', 'Lingayath'), ('Loniya', 'Loniya'), ('Madhesiya/Kanu/Halwai', 'Madhesiya/Kanu/Halwai'), ('Mahajan', 'Mahajan'), ('Mahar', 'Mahar'), ('Maheshwari', 'Maheshwari'), ('Maheshwari/Meshri', 'Maheshwari/Meshri'), ('Mahor', 'Mahor'), ('Mahuri', 'Mahuri'), ('Mair Rajput Swarnkar', 'Mair Rajput Swarnkar'), ('Mali', 'Mali'), ('Mallah', 'Mallah'), ('Malwani', 'Malwani'), ('Malviya Brahmin', 'Malviya Brahmin'), ('Malwani', 'Malwani'), ('Mannan/Velan/Vannan', 'Mannan/Velan/Vannan'), ('Maratha', 'Maratha'), ('Maratha Kshatriya', 'Maratha Kshatriya'), ('Mathur', 'Mathur'), ('Mathur Vaishya', 'Mathur Vaishya'), ('Maurya/Shakya', 'Maurya/Shakya'), ('Meena', 'Meena'), ('Meghwal', 'Meghwal'), ('Mehra', 'Mehra'), ('Modi', 'Modi'), ('Nai', 'Nai'), ('Nema', 'Nema'), ('Oswal', 'Oswal'), ('Padmavati', 'Padmavati'), ('Pal', 'Pal'), ('Pallan/Devandra Kula Vellalan', 'Pallan/Devandra Kula Vellalan'), ('Panan', 'Panan'), ('Paravan/Bharatar', 'Paravan/Bharatar'), ('Parit', 'Parit'), ('Pasi', 'Pasi'), ('Paswan/Dusadh', 'Paswan/Dusadh'), ('Patel', 'Patel'), ('Patil', 'Patil'), ('Patwa', 'Patwa'), ('Poddar', 'Poddar'), ('Porwal/Porwar', 'Porwal/Porwar'), ('Poundra', 'Poundra'), ('Pulaya/Cheruman', 'Pulaya/Cheruman'), ('Raigar', 'Raigar'), ('Rajbhar', 'Rajbhar'), ('Rajpurohit', 'Rajpurohit'), ('Rajput', 'Rajput'), ('Rastogi', 'Rastogi'), ('Rathi', 'Rathi'), ('Rauniar', 'Rauniar'), ('Ravana Rajput', 'Ravana Rajput'), ('Rawat', 'Rawat'), ('Rohit/Chamar', 'Rohit/Chamar'), ('Ror', 'Ror'), ('SC', 'SC'), ('ST', 'ST'), ('Sahu', 'Sahu'), ('Saini', 'Saini'), ('Samagar', 'Samagar'), ('Sambava', 'Sambava'), ('Satnami', 'Satnami'), ('Shah', 'Shah'), ('Shaw/Sahu/Reli', 'Shaw/Sahu/Reli'), ('Shilpkar', 'Shilpkar'), ('Sonar', 'Sonar'), ('Sonkar', 'Sonkar'), ('Teli', 'Teli'), ('Thakur', 'Thakur'), ('Thandan', 'Thandan'), ('Ummar/Umre/Bagaria', 'Ummar/Umre/Bagaria'), ('Vaish', 'Vaish'), ('Vaishnav', 'Vaishnav'), ('Vaishnav Kapol', 'Vaishnav Kapol'), ('Vaishnav Khadyata', 'Vaishnav Khadyata'), ('Vaishnav Lad', 'Vaishnav Lad'), ('Vaishnav Modh', 'Vaishnav Modh'), ('Vaishnav Porvad', 'Vaishnav Porvad'), ('Vaishnav Shrimali', 'Vaishnav Shrimali'), ('Vaishnav Sorathaiya', 'Vaishnav Sorathaiya'), ('Vaishnav Vania', 'Vaishnav Vania'), ('Vaishya', 'Vaishya'), ('Vani', 'Vani'), ('Vani/Vaishya', 'Vani/Vaishya'), ('Varshney', 'Varshney'), ('Varshney(Barahseni', 'Varshney(Barahseni'), ('Vijayvargia', 'Vijayvargia'), ('Vishwakarma', 'Vishwakarma'), ('Yadav', 'Yadav'), ('Khatri', 'Khatri'), ('Do not wish to specify', 'Do not wish to specify')], max_length=1000)),
                ('dosh', models.CharField(choices=[('Yes', 'Yes'), ('No', 'No'), ('', 'Do not Know')], max_length=100)),
                ('height', models.CharField(max_length=100)),
                ('marital_status', models.CharField(choices=[('Select Options', 'Select Options'), ('Never Married', 'Never Married'), ('Widowed', 'Widowed'), ('Divorced', 'Divorced'), ('Awaiting Divorce', 'Awaiting Divorce')], max_length=100)),
                ('any_disability', models.CharField(choices=[('Select Options', 'Select Options'), ('None', 'None'), ('Physically Challenged', 'Physically Challenged')], max_length=100)),
                ('family_status', models.CharField(choices=[('Select Options', 'Select Options'), ('Middle Class', 'Middle Class'), ('Affluent', 'Affluent'), ('Upper Middle Class', 'Upper Middle Class'), ('Rich', 'Rich')], max_length=100)),
                ('family_type', models.CharField(choices=[('Select Options', 'Select Options'), ('Joint', 'Joint'), ('Nuclear', 'Nuclear')], max_length=100)),
                ('family_value', models.CharField(choices=[('Select Options', 'Select Options'), ('Orthodox', 'Orthodox'), ('Traditional', 'Traditional'), ('Moderate', 'Moderate'), ('Liberal', 'Liberal')], max_length=100)),
                ('education', models.CharField(choices=[('Select Options', 'Select Options'), ('Aeronautical Engineering', 'Aeronautical Engineering'), ('B.Arch', 'B.Arch'), ('BCA', 'BCA'), ('B.E', 'B.E'), ('B.Plan', 'B.Plan'), ('B.Sc IT/Computer Science', 'B.Sc IT/Computer Science'), ('B.Tech', 'B.Tech'), ('Other Bacherlor Degree in Engineering/Computers', 'Other Bacherlor Degree in Engineering/Computers'), ('B.S(Engineering)', 'B.S(Engineering)'), ('M.Arch', 'M.Arch'), ('MCA', 'MCA'), ('ME', 'ME'), ('M.Sc IT/Computer Science', 'M.Sc IT/Computer Science'), ('M.S(Engg)', 'M.S(Engg)'), ('M.Tech', 'M.Tech'), ('PGDCA', 'PGDCA'), ('Other Master Degree in Engineering/Computer', 'Other Master Degree in Engineering/Computer'), ('B.A', 'B.A'), ('B.Com', 'B.Com'), ('B.Ed', 'B.Ed'), ('BFA', 'BFA'), ('BFT', 'BFT'), ('BLIS', 'BLIS'), ('B.M.M', 'B.M.M'), ('B.Sc', 'B.Sc'), ('B.S.W', 'B.S.W'), ('B.Phil', 'B.Phil'), ('M.A', 'M.A'), ('M.Sc', 'M.Sc'), ('BBA', 'BBA'), ('MBA', 'MBA'), ('Software Engineer', 'Software Engineer')], max_length=1000)),
                ('employed_in', models.CharField(choices=[('Select Options', 'Select Options'), ('Government/PSU', 'Government/PSU'), ('Private', 'Private'), ('Business', 'Business'), ('Defence', 'Defence'), ('Self Employed', 'Self Employed'), ('Not Working', 'Not Working')], max_length=100)),
                ('occupation', models.CharField(choices=[('Select Options', 'Select Options'), ('Software Professional', 'Software Professional'), ('Teaching', 'Teaching'), ('Executive', 'Executive'), ('Doctor', 'Doctor'), ('Manager', 'Manager'), ('Professor/Lecturer', 'Professor/Lecturer'), ('Officer', 'Officer'), ('Human Resources Professional', 'Human Resources Professional'), ('Pilot', 'Pilot'), ('Air Hostess', 'Air Hostess'), ('Chartered Accountant', 'Chartered Accountant'), ('Fashion Designer', 'Fashion Designer'), ('MakeUp Artist', 'MakeUp Artist'), ('Civil Services(IAS/IPS/IRS)', 'Civil Services(IAS/IPS/IRS)')], max_length=100)),
                ('annual_income', models.CharField(choices=[('Select Options', 'Select Options'), ('0-1Lakhs', '0-1Lakhs'), ('1-2lakhs', '1-2lakhs'), ('2-3lakhs', '2-3lakhs'), ('3-4lakhs', '3-4lakhs'), ('4-5lakhs', '4-5lakhs'), ('5-6lakhs', '5-6lakhs'), ('6-7lakhs', '6-7lakhs'), ('7-8lakhs', '7-8lakhs'), ('8-9lakhs', '8-9lakhs'), ('9-10lakhs', '9-10lakhs'), ('10-12lakhs', '10-12lakhs'), ('12-14lakhs', '12-14lakhs'), ('14-16lakhs', '14-16lakhs'), ('16-18lakhs', '16-18lakhs'), ('18-20lakhs', '18-20lakhs'), ('20-25lakhs', '20-25kakhs'), ('25-30lakhs', '25-30lakhs'), ('30-35lakhs', '30-35lakhs'), ('35-40lakhs', '35-40lakhs'), ('40-45lakhs', '40-45lakhs'), ('45-50lakhs', '45-50lakhs'), ('50-60lakhs', '50-60lakhs'), ('60-70lakhs', '60-70lakhs'), ('70-80lakhs', '70-80lakhs'), ('80-90lakhs', '80-90lakhs'), ('90-1crore', '90-1crore'), ('1crore & Above', '1crore & Above')], max_length=1000)),
                ('work_location', models.CharField(choices=[('Select Options', 'Select Options'), ('Indian', 'Indian')], max_length=100)),
                ('residing_state', models.CharField(max_length=100)),
                ('city', models.CharField(max_length=100)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', app.manager.UserManager()),
            ],
        ),
    ]
